// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VoxTics.Data;

#nullable disable

namespace VoxTics.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250830184201_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VoxTics.Models.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("News")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "American actor and film producer.",
                            FirstName = "Leonardo",
                            LastName = "DiCaprio",
                            News = "Best known for Inception and Titanic.",
                            ProfilePicture = "leo.png"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "American actor and filmmaker.",
                            FirstName = "Joseph",
                            LastName = "Gordon-Levitt",
                            News = "Starred in Inception.",
                            ProfilePicture = "jgl.png"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Australian actor, best known for Avatar.",
                            FirstName = "Sam",
                            LastName = "Worthington",
                            News = "Will reprise his role in Avatar 3.",
                            ProfilePicture = "sam.png"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "English actress, known for Titanic.",
                            FirstName = "Kate",
                            LastName = "Winslet",
                            News = "Won Academy Award for The Reader.",
                            ProfilePicture = "kate.png"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Irish actor, known for Oppenheimer and Peaky Blinders.",
                            FirstName = "Cillian",
                            LastName = "Murphy",
                            News = "Portrayed J. Robert Oppenheimer.",
                            ProfilePicture = "cillian.png"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "English actor, known for Batman trilogy.",
                            FirstName = "Christian",
                            LastName = "Bale",
                            News = "Played Bruce Wayne in The Dark Knight.",
                            ProfilePicture = "bale.png"
                        },
                        new
                        {
                            Id = 7,
                            Bio = "American actor, voiced Simba in The Lion King.",
                            FirstName = "Matthew",
                            LastName = "Broderick",
                            News = "Tony Award-winning stage actor.",
                            ProfilePicture = "broderick.png"
                        },
                        new
                        {
                            Id = 8,
                            Bio = "American actor, known for Interstellar.",
                            FirstName = "Matthew",
                            LastName = "McConaughey",
                            News = "Won Academy Award for Dallas Buyers Club.",
                            ProfilePicture = "mcconaughey.png"
                        },
                        new
                        {
                            Id = 25,
                            Bio = "American actor, known for Joker.",
                            FirstName = "Joaquin",
                            LastName = "Phoenix",
                            News = "Won Academy Award for Joker.",
                            ProfilePicture = "phoenix.png"
                        },
                        new
                        {
                            Id = 29,
                            Bio = "American actor, starred in The Conjuring.",
                            FirstName = "Patrick",
                            LastName = "Wilson",
                            News = "Also starred in Insidious franchise.",
                            ProfilePicture = "wilson.png"
                        },
                        new
                        {
                            Id = 41,
                            Bio = "American actress and singer, voice of Elsa in Frozen.",
                            FirstName = "Idina",
                            LastName = "Menzel",
                            News = "Famous for singing Let It Go.",
                            ProfilePicture = "idina.png"
                        });
                });

            modelBuilder.Entity("VoxTics.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Documentary"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cartoon"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Horror"
                        });
                });

            modelBuilder.Entity("VoxTics.Models.Cinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CinemaLogo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cinemas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "395 Welch Junction",
                            CinemaLogo = "Quis.tiff",
                            Description = "Duis aliquam convallis nunc...",
                            Name = "Photospace"
                        },
                        new
                        {
                            Id = 2,
                            Address = "6958 Debra Avenue",
                            CinemaLogo = "Sagittis.tiff",
                            Description = "Fusce posuere felis sed lacus...",
                            Name = "Trilith"
                        },
                        new
                        {
                            Id = 3,
                            Address = "710 Weeping Birch Junction",
                            CinemaLogo = "DisParturientMontes.jpeg",
                            Description = "Praesent id massa id nisl venenatis lacinia...",
                            Name = "Oozz"
                        },
                        new
                        {
                            Id = 4,
                            Address = "1200 Sunset Blvd",
                            CinemaLogo = "Cinemark.png",
                            Description = "State-of-the-art cinema experience...",
                            Name = "Cinemark"
                        },
                        new
                        {
                            Id = 5,
                            Address = "45 Main Street",
                            CinemaLogo = "Regal.jpg",
                            Description = "Family-friendly movie theatre...",
                            Name = "Regal Theatres"
                        },
                        new
                        {
                            Id = 6,
                            Address = "88 Broadway Ave",
                            CinemaLogo = "AMC.png",
                            Description = "Luxury recliners and IMAX screens...",
                            Name = "AMC Theatres"
                        },
                        new
                        {
                            Id = 7,
                            Address = "200 City Center Plaza",
                            CinemaLogo = "IMAX.jpg",
                            Description = "Immersive cinema with giant screens...",
                            Name = "IMAX Experience"
                        });
                });

            modelBuilder.Entity("VoxTics.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MovieStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrailerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CinemaId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CinemaId = 1,
                            Description = "A mind-bending thriller",
                            EndDate = new DateTime(2011, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieStatus = "Available",
                            Price = 50m,
                            StartDate = new DateTime(2010, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CinemaId = 2,
                            Description = "The next epic sci-fi adventure",
                            EndDate = new DateTime(2026, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieStatus = "ComingSoon",
                            Price = 60m,
                            StartDate = new DateTime(2025, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Avatar 3"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CinemaId = 3,
                            Description = "A tragic love story",
                            EndDate = new DateTime(1998, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieStatus = "Expired",
                            Price = 40m,
                            StartDate = new DateTime(1997, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Titanic"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            CinemaId = 1,
                            Description = "The story of J. Robert Oppenheimer",
                            EndDate = new DateTime(2024, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieStatus = "Available",
                            Price = 55m,
                            StartDate = new DateTime(2023, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Oppenheimer"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            CinemaId = 4,
                            Description = "Batman faces the Joker in Gotham",
                            EndDate = new DateTime(2009, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieStatus = "Expired",
                            Price = 45m,
                            StartDate = new DateTime(2008, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Dark Knight"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 5,
                            CinemaId = 5,
                            Description = "A young lion prince flees his kingdom",
                            EndDate = new DateTime(1995, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieStatus = "Expired",
                            Price = 35m,
                            StartDate = new DateTime(1994, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Lion King"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            CinemaId = 6,
                            Description = "A journey through space and time",
                            EndDate = new DateTime(2015, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieStatus = "Available",
                            Price = 65m,
                            StartDate = new DateTime(2014, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Interstellar"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            CinemaId = 7,
                            Description = "The origin story of Gotham’s villain",
                            EndDate = new DateTime(2020, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieStatus = "Available",
                            Price = 50m,
                            StartDate = new DateTime(2019, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Joker"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 6,
                            CinemaId = 6,
                            Description = "A chilling horror story",
                            EndDate = new DateTime(2014, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieStatus = "Expired",
                            Price = 40m,
                            StartDate = new DateTime(2013, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Conjuring"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            CinemaId = 5,
                            Description = "A magical Disney animated film",
                            EndDate = new DateTime(2014, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieStatus = "Available",
                            Price = 30m,
                            StartDate = new DateTime(2013, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Frozen"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 6,
                            CinemaId = 6,
                            Description = "A terrifying sequel to the horror hit",
                            EndDate = new DateTime(2017, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieStatus = "Expired",
                            Price = 45m,
                            StartDate = new DateTime(2016, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Conjuring 2"
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 5,
                            CinemaId = 5,
                            Description = "Elsa and Anna’s new magical journey",
                            EndDate = new DateTime(2020, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieStatus = "Available",
                            Price = 35m,
                            StartDate = new DateTime(2019, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Frozen II"
                        });
                });

            modelBuilder.Entity("VoxTics.Models.MovieActor", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("MovieActors");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            ActorId = 1
                        },
                        new
                        {
                            MovieId = 1,
                            ActorId = 2
                        },
                        new
                        {
                            MovieId = 2,
                            ActorId = 3
                        },
                        new
                        {
                            MovieId = 3,
                            ActorId = 4
                        },
                        new
                        {
                            MovieId = 3,
                            ActorId = 1
                        },
                        new
                        {
                            MovieId = 4,
                            ActorId = 5
                        },
                        new
                        {
                            MovieId = 5,
                            ActorId = 6
                        },
                        new
                        {
                            MovieId = 6,
                            ActorId = 7
                        },
                        new
                        {
                            MovieId = 7,
                            ActorId = 8
                        },
                        new
                        {
                            MovieId = 8,
                            ActorId = 25
                        },
                        new
                        {
                            MovieId = 9,
                            ActorId = 29
                        },
                        new
                        {
                            MovieId = 21,
                            ActorId = 29
                        },
                        new
                        {
                            MovieId = 10,
                            ActorId = 41
                        },
                        new
                        {
                            MovieId = 26,
                            ActorId = 41
                        });
                });

            modelBuilder.Entity("VoxTics.Models.MovieImg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieImgs");
                });

            modelBuilder.Entity("VoxTics.Models.Movie", b =>
                {
                    b.HasOne("VoxTics.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoxTics.Models.Cinema", "Cinema")
                        .WithMany("Movies")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("VoxTics.Models.MovieActor", b =>
                {
                    b.HasOne("VoxTics.Models.Actor", "Actor")
                        .WithMany("MovieActors")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoxTics.Models.Movie", "Movie")
                        .WithMany("MovieActors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("VoxTics.Models.MovieImg", b =>
                {
                    b.HasOne("VoxTics.Models.Movie", "Movie")
                        .WithMany("MovieImgs")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("VoxTics.Models.Actor", b =>
                {
                    b.Navigation("MovieActors");
                });

            modelBuilder.Entity("VoxTics.Models.Cinema", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("VoxTics.Models.Movie", b =>
                {
                    b.Navigation("MovieActors");

                    b.Navigation("MovieImgs");
                });
#pragma warning restore 612, 618
        }
    }
}
