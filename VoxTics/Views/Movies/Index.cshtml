@model VoxTics.Helpers.PaginatedList<VoxTics.Models.ViewModels.Movie.MovieVM>
@using System.Linq
@{
    ViewData["Title"] = "Movies - MovieHub";
}

<style>
    @@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700;800&display=swap');

    :root {
        --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        --dark-gradient: linear-gradient(135deg, #232526 0%, #414345 100%);
        --glass-bg: rgba(255, 255, 255, 0.1);
        --glass-border: rgba(255, 255, 255, 0.2);
        --shadow-light: 0 8px 32px rgba(31, 38, 135, 0.37);
        --shadow-heavy: 0 20px 60px rgba(0, 0, 0, 0.3);
        --glow-color: rgba(102, 126, 234, 0.4);
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 25%, #f093fb 75%, #f5576c 100%);
        background-attachment: fixed;
        min-height: 100vh;
        overflow-x: hidden;
    }

    .container {
        position: relative;
        z-index: 2;
    }

    /* Animated Background Particles */
    .particles {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 1;
    }

    .particle {
        position: absolute;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 50%;
        animation: float 6s infinite ease-in-out;
    }

    @@keyframes float {
        0%, 100%

    {
        transform: translateY(0px) rotate(0deg);
        opacity: 0.5;
    }

    50% {
        transform: translateY(-20px) rotate(180deg);
        opacity: 1;
    }

    }

    /* Header Section */
    .page-header {
        text-align: center;
        padding: 3rem 0;
        margin-bottom: 2rem;
        position: relative;
    }

    .page-title {
        font-size: 4rem;
        font-weight: 800;
        background: linear-gradient(135deg, #fff, #f8f9fa);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        text-shadow: 0 0 30px rgba(255, 255, 255, 0.5);
        margin-bottom: 1rem;
        animation: titleGlow 3s ease-in-out infinite alternate;
    }

    @@keyframes titleGlow {
        from

    {
        text-shadow: 0 0 30px rgba(255, 255, 255, 0.5);
    }

    to {
        text-shadow: 0 0 40px rgba(255, 255, 255, 0.8), 0 0 60px rgba(102, 126, 234, 0.3);
    }

    }

    .page-subtitle {
        color: rgba(255, 255, 255, 0.8);
        font-size: 1.2rem;
        font-weight: 300;
    }

    /* Glassmorphism Search Box */
    .search-container {
        display: flex;
        justify-content: center;
        margin-bottom: 3rem;
        animation: slideInDown 1s ease-out;
    }

    .search-box {
        position: relative;
        width: 100%;
        max-width: 600px;
    }

    .search-input {
        width: 100%;
        padding: 1.2rem 1.5rem 1.2rem 4rem;
        border: 2px solid var(--glass-border);
        border-radius: 25px;
        font-size: 1.1rem;
        font-weight: 400;
        background: var(--glass-bg);
        backdrop-filter: blur(20px);
        color: white;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: var(--shadow-light);
    }

        .search-input::placeholder {
            color: rgba(255, 255, 255, 0.6);
        }

        .search-input:focus {
            border-color: rgba(255, 255, 255, 0.4);
            box-shadow: 0 0 0 4px var(--glow-color), var(--shadow-heavy);
            outline: none;
            transform: scale(1.02);
        }

    .search-icon {
        position: absolute;
        left: 1.5rem;
        top: 50%;
        transform: translateY(-50%);
        color: rgba(255, 255, 255, 0.7);
        font-size: 1.2rem;
        transition: all 0.3s ease;
    }

    .search-input:focus + .search-icon {
        color: white;
        transform: translateY(-50%) scale(1.1);
    }

    /* Movie Grid Animations */
    .movie-grid {
        animation: fadeInUp 1.2s ease-out;
    }

    @@keyframes slideInDown {
        from

    {
        transform: translateY(-50px);
        opacity: 0;
    }

    to {
        transform: translateY(0);
        opacity: 1;
    }

    }

    @@keyframes fadeInUp {
        from

    {
        transform: translateY(30px);
        opacity: 0;
    }

    to {
        transform: translateY(0);
        opacity: 1;
    }

    }

    /* Ultra Modern Movie Cards */
    .movie-card {
        border: none;
        border-radius: 20px;
        background: var(--glass-bg);
        backdrop-filter: blur(20px);
        border: 1px solid var(--glass-border);
        overflow: hidden;
        cursor: pointer;
        transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        box-shadow: var(--shadow-light);
        animation: cardSlideIn 0.6s ease-out forwards;
        opacity: 0;
        transform: translateY(30px);
    }

        .movie-card:nth-child(odd) {
            animation-delay: 0.1s;
        }

        .movie-card:nth-child(even) {
            animation-delay: 0.2s;
        }

    @@keyframes cardSlideIn {
        to

    {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .movie-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%);
        opacity: 0;
        transition: opacity 0.3s ease;
        border-radius: 20px;
        z-index: 1;
    }

    .movie-card:hover::before {
        opacity: 1;
    }

    .movie-card:hover {
        transform: translateY(-15px) scale(1.03);
        box-shadow: 0 30px 60px rgba(0, 0, 0, 0.4), 0 0 50px var(--glow-color);
        border-color: rgba(255, 255, 255, 0.3);
    }

    /* Movie Card Image */
    .movie-image {
        height: 350px;
        object-fit: cover;
        transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        filter: brightness(0.9) contrast(1.1);
    }

    .movie-card:hover .movie-image {
        transform: scale(1.08);
        filter: brightness(1.1) contrast(1.2) saturate(1.2);
    }

    /* Holographic Overlay */
    .card-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient( 45deg, rgba(0,0,0,0) 0%, rgba(102, 126, 234, 0.1) 25%, rgba(118, 75, 162, 0.1) 50%, rgba(240, 147, 251, 0.1) 75%, rgba(0,0,0,0.8) 100% );
        opacity: 0;
        transition: all 0.4s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 2;
    }

    .movie-card:hover .card-overlay {
        opacity: 1;
    }

    /* 3D Play Button */
    .play-btn {
        background: linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.7) 100%);
        border: none;
        border-radius: 50%;
        width: 70px;
        height: 70px;
        font-size: 1.5rem;
        color: #333;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        box-shadow: 0 8px 25px rgba(0,0,0,0.3);
        transform: scale(0);
    }

    .movie-card:hover .play-btn {
        transform: scale(1) rotateY(360deg);
        background: var(--primary-gradient);
        color: white;
        box-shadow: 0 15px 35px rgba(102, 126, 234, 0.4);
    }

    .play-btn:hover {
        transform: scale(1.2) rotateY(360deg) !important;
        box-shadow: 0 20px 40px rgba(102, 126, 234, 0.6);
    }

    /* Card Body */
    .card-body {
        padding: 1.5rem;
        background: rgba(0, 0, 0, 0.3);
        backdrop-filter: blur(10px);
        position: relative;
        z-index: 3;
    }

    .card-title {
        font-weight: 700;
        font-size: 1.3rem;
        margin-bottom: 1rem;
        color: white;
        text-shadow: 0 2px 8px rgba(0,0,0,0.3);
        line-height: 1.3;
    }

    /* Status Badges with Glow */
    .status-badge {
        font-size: 0.85rem;
        font-weight: 600;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        margin-bottom: 1rem;
        display: inline-block;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
    }

        .status-badge::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
            transition: left 0.5s ease;
        }

        .status-badge:hover::before {
            left: 100%;
        }

        .status-badge.bg-success {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
            box-shadow: 0 4px 15px rgba(40, 167, 69, 0.4);
        }

        .status-badge.bg-info {
            background: linear-gradient(135deg, #17a2b8, #20c997);
            color: white;
            box-shadow: 0 4px 15px rgba(23, 162, 184, 0.4);
        }

        .status-badge.bg-secondary {
            background: linear-gradient(135deg, #6c757d, #495057);
            color: white;
            box-shadow: 0 4px 15px rgba(108, 117, 125, 0.4);
        }

    /* Futuristic Button */
    .btn-details {
        background: var(--primary-gradient);
        border: none;
        padding: 0.8rem 2rem;
        border-radius: 25px;
        color: white;
        font-weight: 600;
        text-decoration: none;
        display: inline-block;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        text-transform: uppercase;
        letter-spacing: 1px;
        font-size: 0.9rem;
    }

        .btn-details::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.6s ease;
        }

        .btn-details:hover {
            transform: translateY(-2px) scale(1.05);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.5);
            color: white;
            text-decoration: none;
        }

            .btn-details:hover::before {
                left: 100%;
            }

    /* Pagination Redesign */
    .pagination-container {
        margin-top: 4rem;
        animation: fadeInUp 1.5s ease-out;
    }

    .pagination {
        justify-content: center;
        margin: 0;
    }

    .page-item .page-link {
        background: var(--glass-bg);
        backdrop-filter: blur(10px);
        border: 1px solid var(--glass-border);
        color: white;
        margin: 0 0.2rem;
        border-radius: 12px;
        padding: 0.8rem 1.2rem;
        font-weight: 500;
        transition: all 0.3s ease;
        text-decoration: none;
    }

    .page-item.active .page-link {
        background: var(--primary-gradient);
        border-color: rgba(255, 255, 255, 0.3);
        color: white;
        transform: scale(1.1);
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
    }

    .page-item .page-link:hover {
        background: rgba(255, 255, 255, 0.2);
        border-color: rgba(255, 255, 255, 0.3);
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(255, 255, 255, 0.2);
    }

    .page-item.disabled .page-link {
        background: rgba(0, 0, 0, 0.2);
        border-color: rgba(255, 255, 255, 0.1);
        color: rgba(255, 255, 255, 0.4);
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .page-title

    {
        font-size: 2.5rem;
    }

    .movie-card {
        margin-bottom: 2rem;
    }

    }

    /* Loading Animation */
    .loading-spinner {
        display: none;
        text-align: center;
        margin: 2rem 0;
    }

    .spinner {
        width: 50px;
        height: 50px;
        border: 3px solid rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        border-top-color: white;
        animation: spin 1s ease-in-out infinite;
        margin: 0 auto;
    }

    @@keyframes spin {
        to

    {
        transform: rotate(360deg);
    }

    }
</style>

<!-- Animated Background -->
<div class="particles" id="particles"></div>

<!-- Header Section -->
<div class="page-header">
    <h1 class="page-title">Cinema Collection</h1>
    <p class="page-subtitle">Discover Your Next Favorite Movie</p>
</div>

<!-- Search Section -->
<div class="search-container">
    <div class="search-box">
        <input type="text" class="search-input" id="searchInput" placeholder="Search for movies, genres, or actors..." />
        <i class="fas fa-search search-icon"></i>
    </div>
</div>

<!-- Loading Spinner -->
<div class="loading-spinner" id="loadingSpinner">
    <div class="spinner"></div>
    <p style="color: white; margin-top: 1rem;">Searching...</p>
</div>

<!-- Movie Grid -->
<div class="row movie-grid" id="movieList">
    @foreach (var movie in Model)
    {
        <div class="col-xl-3 col-lg-4 col-md-6 col-sm-12 mb-4">
            <div class="card movie-card position-relative" data-title="@movie.Title.ToLower()">
                <img src="@movie.PosterImage ?? " /images/default-movie.jpg"" class="card-img-top movie-image" alt="@movie.Title" />
                <div class="card-overlay">
                    <button class="play-btn">
                        <i class="fas fa-play"></i>
                    </button>
                </div>
                <div class="card-body">
                    <h5 class="card-title">@movie.Title</h5>
                    <span class="status-badge @movie.StatusBadgeClass">@movie.Status</span>
                    <a class="btn-details" href="@Url.Action("Details", "Movies", new { id = movie.Id })">
                        <i class="fas fa-info-circle me-2"></i>View Details
                    </a>
                </div>
            </div>
        </div>
    }
</div>

<!-- Enhanced Pagination -->
<div class="pagination-container">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageIndex - 1)">
                        <i class="fas fa-chevron-left me-1"></i>Previous
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">
                        <i class="fas fa-chevron-left me-1"></i>Previous
                    </span>
                </li>
            }

            @foreach (var i in Model.GetPageNumbers())
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageIndex + 1)">
                        Next<i class="fas fa-chevron-right ms-1"></i>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">
                        Next<i class="fas fa-chevron-right ms-1"></i>
                    </span>
                </li>
            }
        </ul>
    </nav>
</div>

<script>
    // Create animated particles
    function createParticles() {
        const particlesContainer = document.getElementById('particles');
        const particleCount = 20;

        for (let i = 0; i < particleCount; i++) {
            const particle = document.createElement('div');
            particle.className = 'particle';
            particle.style.width = Math.random() * 4 + 2 + 'px';
            particle.style.height = particle.style.width;
            particle.style.left = Math.random() * 100 + '%';
            particle.style.top = Math.random() * 100 + '%';
            particle.style.animationDelay = Math.random() * 6 + 's';
            particle.style.animationDuration = (Math.random() * 3 + 3) + 's';
            particlesContainer.appendChild(particle);
        }
    }

    // Enhanced search with loading animation
    let searchTimeout;
    document.getElementById('searchInput').addEventListener('input', function(e) {
        const term = e.target.value.toLowerCase();
        const loadingSpinner = document.getElementById('loadingSpinner');
        const movieList = document.getElementById('movieList');

        clearTimeout(searchTimeout);

        if (term.length > 0) {
            loadingSpinner.style.display = 'block';
            movieList.style.opacity = '0.5';
        }

        searchTimeout = setTimeout(() => {
            document.querySelectorAll('#movieList .movie-card').forEach(card => {
                const shouldShow = card.dataset.title.includes(term);
                const cardColumn = card.closest('.col-xl-3, .col-lg-4, .col-md-6, .col-sm-12');

                if (shouldShow) {
                    cardColumn.style.display = 'block';
                    cardColumn.style.animation = 'fadeInUp 0.5s ease-out';
                } else {
                    cardColumn.style.display = 'none';
                }
            });

            loadingSpinner.style.display = 'none';
            movieList.style.opacity = '1';
        }, term.length > 0 ? 500 : 0);
    });

    // Enhanced card interactions
    document.querySelectorAll('.movie-card').forEach((card, index) => {
        // Staggered animation delay
        card.style.animationDelay = (index * 0.1) + 's';

        card.addEventListener('click', function(e) {
            if (!e.target.closest('a') && !e.target.closest('.play-btn')) {
                const url = this.querySelector('.btn-details').href;

                // Add click animation
                this.style.transform = 'scale(0.95)';
                setTimeout(() => {
                    this.style.transform = '';
                    window.location.href = url;
                }, 150);
            }
        });

        // Play button special effect
        const playBtn = card.querySelector('.play-btn');
        playBtn.addEventListener('click', function(e) {
            e.stopPropagation();

            // Create ripple effect
            const ripple = document.createElement('div');
            ripple.style.cssText = `
                position: absolute;
                border-radius: 50%;
                background: rgba(255, 255, 255, 0.6);
                transform: scale(0);
                animation: ripple 0.6s linear;
                pointer-events: none;
            `;

            const rect = this.getBoundingClientRect();
            const size = 100;
            ripple.style.width = ripple.style.height = size + 'px';
            ripple.style.left = (rect.width / 2 - size / 2) + 'px';
            ripple.style.top = (rect.height / 2 - size / 2) + 'px';

            this.appendChild(ripple);

            setTimeout(() => ripple.remove(), 600);
        });
    });

    // Initialize particles
    createParticles();

    // Smooth scroll for pagination
    document.querySelectorAll('.pagination .page-link').forEach(link => {
        link.addEventListener('click', function(e) {
            if (this.getAttribute('href') && this.getAttribute('href').includes('page=')) {
                e.preventDefault();
                document.body.style.opacity = '0.8';
                setTimeout(() => {
                    window.location.href = this.href;
                }, 200);
            }
        });
    });

    // Add CSS for ripple animation
    const style = document.createElement('style');
    style.textContent = `
        @@keyframes ripple {
            to {
                transform: scale(4);
                opacity: 0;
            }
        }
    `;
    document.head.appendChild(style);
</script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">