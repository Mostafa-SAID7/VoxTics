@model IEnumerable<VoxTics.Models.ViewModels.MovieVM>
@using VoxTics.Helpers
@using VoxTics.Models.ViewModels

@{
    ViewData["Title"] = "Movies";
    var paginated = ViewData["Paginated"] as PaginatedList<VoxTics.Models.Entities.Movie>;
    var search = ViewData["Search"] as string;
    var categoryId = ViewData["CategoryId"] as int?;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="fw-bold">Movies</h2>
    <form id="searchForm" class="d-flex" method="get" asp-action="Index" asp-controller="Movies">
        <input type="search" name="search" value="@search" class="form-control me-2" placeholder="Search movies..." />
        <button type="submit" class="btn btn-outline-primary">Search</button>
    </form>
</div>

<div id="moviesContainer">
    @Html.Partial("_MovieCards", Model)
</div>

@if (paginated != null && paginated.TotalPages > 1)
{
    <partial name="~/Views/Shared/_Pagination.cshtml" model="paginated" />
}

@section Scripts {
    <script>
        // Ajax search
        $("#searchForm").on("submit", function (e) {
            e.preventDefault();
            const query = $(this).serialize();
            $.get("@Url.Action("Index", "Movies")", query, function (html) {
                $("#moviesContainer").html($(html).find("#moviesContainer").html());
            });
        });
    </script>
}
