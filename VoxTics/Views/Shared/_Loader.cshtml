@* Views/Shared/_Loader.cshtml *@
<div id="global-loader-overlay" class="d-none" aria-hidden="true" role="status" aria-live="polite">
    <div class="global-loader-inner" id="global-loader-inner">
        <div class="spinner-border" role="status" aria-hidden="true">
            <span class="visually-hidden">Loading...</span>
        </div>
        <div class="loader-text">Loading...</div>
    </div>
</div>


@section Styles {
    <style>
        /* ---------- Global loader ---------- */
        #global-loader-overlay {
            position: fixed;
            inset: 0; /* top/right/bottom/left 0 */
            display: flex;
            align-items: center;
            justify-content: center;
            background: rgba(255,255,255,0.78);
            z-index: 99999;
            -webkit-backdrop-filter: blur(4px);
            backdrop-filter: blur(4px);
            pointer-events: auto;
        }

            #global-loader-overlay.d-none {
                display: none !important;
                pointer-events: none;
            }

        .global-loader-inner {
            display: flex;
            gap: 0.75rem;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            padding: 0.9rem 1.1rem;
            border-radius: 10px;
            box-shadow: 0 8px 28px rgba(0,0,0,0.08);
            background: rgba(255,255,255,0.85);
            min-width: 160px;
            text-align: center;
        }

        .loader-text {
            font-size: 0.95rem;
            color: #333;
            margin-top: 0.35rem;
        }

        /* small screens — make it slightly smaller */
    @@media (max-width: 420px) {
            .global-loader-inner

        {
            min-width: 120px;
            padding: 0.6rem 0.75rem;
        }

        .loader-text {
            font-size: 0.85rem;
        }

        }

        }
    </style>
}
@section Scripts {
   
        <script>
                     /* wwwroot/js/loader.js
           Debounced global loader, integrates with:
           - jQuery AJAX events ($.ajaxStart/Stop)
           - click navigation (skips anchors/# and target=_blank and data-no-loader)
           - non-AJAX form submissions
           - a small API for fetch: fetchWithLoader()
           - helpers for loading partials into a modal
        */
        (function () {
            const $overlay = $("#global-loader-overlay");
            const DEBOUNCE_MS = 300; // show loader only if request runs longer than this (ms)
            let showTimer = null;
            let visibleCount = 0; // track nested calls

            function _showNow() {
                if (!$overlay.length) return;
                visibleCount++;
                $overlay.removeClass("d-none").attr("aria-hidden", "false");
            }

            function _hideNow(force = false) {
                if (!$overlay.length) return;
                if (force) {
                    visibleCount = 0;
                } else {
                    visibleCount = Math.max(0, visibleCount - 1);
                }
                if (visibleCount === 0) {
                    $overlay.addClass("d-none").attr("aria-hidden", "true");
                }
            }

            window.showLoader = function () {
                // called by user code to request a visible loader
                if (showTimer) clearTimeout(showTimer);
                showTimer = setTimeout(() => {
                    _showNow();
                    showTimer = null;
                }, DEBOUNCE_MS);
            };

            window.hideLoader = function () {
                if (showTimer) {
                    clearTimeout(showTimer);
                    showTimer = null;
                    // no show happened so nothing to hide
                    return;
                }
                _hideNow();
            };

            // Force hide (useful on page load)
            window.forceHideLoader = function () {
                if (showTimer) { clearTimeout(showTimer); showTimer = null; }
                _hideNow(true);
            };

            // jQuery AJAX integration
            if (window.jQuery) {
                $(document).ajaxStart(function () {
                    window.showLoader();
                }).ajaxStop(function () {
                    window.hideLoader();
                });
            }

            // Navigation: show loader for regular same-origin navigation links
            $(document).on("click", "a", function (e) {
                const href = $(this).attr("href") || "";
                const target = $(this).attr("target");
                const noLoader = $(this).data("no-loader");

                if (noLoader || target === "_blank" || !href || href.startsWith("#") || href.startsWith("javascript:")) {
                    return;
                }

                // if link is marked data-ajax (handled with AJAX) skip showing loader here
                if ($(this).data("ajax")) return;

                // show loader — debounced
                window.showLoader();
            });

            // Show loader for non-ajax POST form submits (GET forms usually quick)
            $(document).on("submit", "form", function (e) {
                const $form = $(this);
                if ($form.data("ajax") || ($form.attr("method") || "get").toLowerCase() === "get") {
                    return;
                }
                window.showLoader();
            });

            // fetch wrapper that shows loader
            window.fetchWithLoader = async function (input, init) {
                try {
                    window.showLoader();
                    const res = await fetch(input, init);
                    return res;
                } finally {
                    window.hideLoader();
                }
            };

            // Helper: load a partial view into a Bootstrap modal (by selector)
            // Usage: loadPartialIntoModal('/Admin/Movies/Create', '#myModal .modal-content')
            window.loadPartialIntoModal = function (url, targetSelector, options = {}) {
                // options: method (GET/POST), data, onSuccess(responseHtml), onError
                const method = (options.method || "GET").toUpperCase();

                // Use jQuery ajax if available (better at handling MVC partials and anti-forgery)
                if (window.jQuery) {
                    window.showLoader();
                    return $.ajax({
                        url: url,
                        method: method,
                        data: options.data || null,
                        cache: false
                    }).done(function (html) {
                        $(targetSelector).html(html);
                        if (typeof options.onSuccess === "function") options.onSuccess(html);
                    }).fail(function (xhr, status, err) {
                        if (typeof options.onError === "function") options.onError(xhr, status, err);
                    }).always(function () {
                        window.hideLoader();
                    });
                } else {
                    // fallback to fetch
                    return window.fetchWithLoader(url, { method: method })
                        .then(r => r.text())
                        .then(html => {
                            document.querySelector(targetSelector).innerHTML = html;
                            if (typeof options.onSuccess === "function") options.onSuccess(html);
                        }).catch(err => {
                            if (typeof options.onError === "function") options.onError(err);
                        });
                }
            };

            // ensure loader hidden at startup
            $(function () { window.forceHideLoader(); });
        })();

    </script>
}