@using VoxTics.Models.Enums

@model IEnumerable<VoxTics.Areas.Admin.ViewModels.Movie.MovieListItemViewModel>
@{
    ViewData["Title"] = "Movies";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">
            <i class="fas fa-film me-2"></i>Movie Management
        </h2>
        <div class="d-flex gap-2">
            <button type="button" class="btn btn-outline-primary" id="refreshBtn">
                <i class="fas fa-sync-alt"></i> Refresh
            </button>
            <button type="button" class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#statisticsModal">
                <i class="fas fa-chart-bar"></i> Analytics
            </button>
            <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#bulkActionsModal">
                <i class="fas fa-tasks"></i> Bulk Actions
            </button>
            <button type="button" class="btn btn-outline-success" data-bs-toggle="modal" data-bs-target="#exportModal">
                <i class="fas fa-download"></i> Export
            </button>
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus"></i> Add Movie
            </a>
        </div>
    </div>

    <!-- Enhanced Search and Filters -->
    <div class="card mb-4">
        <div class="card-body">
            <form id="searchForm" class="row g-3" method="get" asp-action="Index">
                @Html.AntiForgeryToken()
                <div class="col-md-3">
                    <label for="searchInput" class="form-label">Search Movies</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" id="searchInput" name="search" value="@ViewData["search"]" 
                               placeholder="Search by title, director, cast..." class="form-control" />
                        <button type="button" id="clearSearch" class="btn btn-outline-secondary">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
                
                <div class="col-md-2">
                    <label for="statusFilter" class="form-label">Status</label>
                    <select id="statusFilter" name="isActive" class="form-select" asp-items="ViewBag.IsActiveOptions"></select>

                </div>
                
                <div class="col-md-2">
                    <label for="categoryFilter" class="form-label">Category</label>
                    <select name="category" id="categoryFilter" class="form-select">
                        <option value="">All Categories</option>
                        @if (ViewData["category"]?.ToString() == "Action")
                        {
                            <option value="Action" selected>Action</option>
                        }
                        else
                        {
                            <option value="Action">Action</option>
                        }
                        @if (ViewData["category"]?.ToString() == "Comedy")
                        {
                            <option value="Comedy" selected>Comedy</option>
                        }
                        else
                        {
                            <option value="Comedy">Comedy</option>
                        }
                        @if (ViewData["category"]?.ToString() == "Drama")
                        {
                            <option value="Drama" selected>Drama</option>
                        }
                        else
                        {
                            <option value="Drama">Drama</option>
                        }
                        @if (ViewData["category"]?.ToString() == "Horror")
                        {
                            <option value="Horror" selected>Horror</option>
                        }
                        else
                        {
                            <option value="Horror">Horror</option>
                        }
                        @if (ViewData["category"]?.ToString() == "Romance")
                        {
                            <option value="Romance" selected>Romance</option>
                        }
                        else
                        {
                            <option value="Romance">Romance</option>
                        }
                        @if (ViewData["category"]?.ToString() == "Sci-Fi")
                        {
                            <option value="Sci-Fi" selected>Sci-Fi</option>
                        }
                        else
                        {
                            <option value="Sci-Fi">Sci-Fi</option>
                        }
                    </select>

                </div>
                
                <div class="col-md-2">
                    <label for="ratingFilter" class="form-label">Rating</label>
                    <select name="rating" id="ratingFilter" class="form-select">
                        <option value="">All Ratings</option>
                        @if (ViewData["rating"]?.ToString() == "G")
                        {
                            <option value="G" selected>G</option>
                        }
                        else
                        {
                            <option value="G">G</option>
                        }
                        @if (ViewData["rating"]?.ToString() == "PG")
                        {
                            <option value="PG" selected>PG</option>
                        }
                        else
                        {
                            <option value="PG">PG</option>
                        }
                        @if (ViewData["rating"]?.ToString() == "PG-13")
                        {
                            <option value="PG-13" selected>PG-13</option>
                        }
                        else
                        {
                            <option value="PG-13">PG-13</option>
                        }
                        @if (ViewData["rating"]?.ToString() == "R")
                        {
                            <option value="R" selected>R</option>
                        }
                        else
                        {
                            <option value="R">R</option>
                        }
                        @if (ViewData["rating"]?.ToString() == "NC-17")
                        {
                            <option value="NC-17" selected>NC-17</option>
                        }
                        else
                        {
                            <option value="NC-17">NC-17</option>
                        }
                    </select>

                </div>
                
                <div class="col-md-2">
                    <label for="featuredFilter" class="form-label">Featured</label>
                    <select name="featured" id="featuredFilter" class="form-select">
                        <option value="">All Movies</option>
                        @if (ViewData["featured"]?.ToString() == "true")
                        {
                            <option value="true" selected>Featured Only</option>
                        }
                        else
                        {
                            <option value="true">Featured Only</option>
                        }

                        @if (ViewData["featured"]?.ToString() == "false")
                        {
                            <option value="false" selected>Not Featured</option>
                        }
                        else
                        {
                            <option value="false">Not Featured</option>
                        }
                    </select>

                </div>
                
                <div class="col-md-1 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-filter"></i>
                    </button>
                </div>
            </form>
            
            <!-- Advanced Filters Row -->
            <div class="row g-3 mt-2">
                <div class="col-md-2">
                    <label for="yearFilter" class="form-label">Release Year</label>
                    <select name="year" id="yearFilter" class="form-select">
                        <option value="">All Years</option>
                        @for (int year = DateTime.Now.Year + 1; year >= 1990; year--)
                        {
                            if (ViewData["year"]?.ToString() == year.ToString())
                            {
                                <option value="@year" selected>@year</option>
                            }
                            else
                            {
                                <option value="@year">@year</option>
                            }
                        }
                    </select>
                </div>
                
                <div class="col-md-2">
                    <label for="durationFilter" class="form-label">Duration</label>
                    <select name="duration" id="durationFilter" class="form-select">
                        <option value="">All Durations</option>
                        @if (ViewData["duration"]?.ToString() == "short")
                        {
                            <option value="short" selected>&lt; 90 min</option>
                        }
                        else
                        {
                            <option value="short">&lt; 90 min</option>
                        }
                        @if (ViewData["duration"]?.ToString() == "medium")
                        {
                            <option value="medium" selected>90-120 min</option>
                        }
                        else
                        {
                            <option value="medium">90-120 min</option>
                        }
                        @if (ViewData["duration"]?.ToString() == "long")
                        {
                            <option value="long" selected>120-150 min</option>
                        }
                        else
                        {
                            <option value="long">120-150 min</option>
                        }
                        @if (ViewData["duration"]?.ToString() == "epic")
                        {
                            <option value="epic" selected>&gt; 150 min</option>
                        }
                        else
                        {
                            <option value="epic">&gt; 150 min</option>
                        }
                    </select>
                </div>
                
                <div class="col-md-2">
                    <label for="priceRangeFilter" class="form-label">Price Range</label>
                    <select name="priceRange" id="priceRangeFilter" class="form-select">
                        <option value="">All Prices</option>
                        @if (ViewData["priceRange"]?.ToString() == "low")
                        {
                            <option value="low" selected>$0-10</option>
                        }
                        else
                        {
                            <option value="low">$0-10</option>
                        }
                        @if (ViewData["priceRange"]?.ToString() == "medium")
                        {
                            <option value="medium" selected>$10-20</option>
                        }
                        else
                        {
                            <option value="medium">$10-20</option>
                        }
                        @if (ViewData["priceRange"]?.ToString() == "high")
                        {
                            <option value="high" selected>$20+</option>
                        }
                        else
                        {
                            <option value="high">$20+</option>
                        }
                    </select>
                </div>
                
                <div class="col-md-2">
                    <label for="sortBy" class="form-label">Sort By</label>
                    <select name="sortBy" id="sortBy" class="form-select">
                        @if (ViewData["sortBy"]?.ToString() == "title")
                        {
                            <option value="title" selected>Title</option>
                        }
                        else
                        {
                            <option value="title">Title</option>
                        }
                        @if (ViewData["sortBy"]?.ToString() == "releaseDate")
                        {
                            <option value="releaseDate" selected>Release Date</option>
                        }
                        else
                        {
                            <option value="releaseDate">Release Date</option>
                        }
                        @if (ViewData["sortBy"]?.ToString() == "price")
                        {
                            <option value="price" selected>Price</option>
                        }
                        else
                        {
                            <option value="price">Price</option>
                        }
                        @if (ViewData["sortBy"]?.ToString() == "rating")
                        {
                            <option value="rating" selected>Rating</option>
                        }
                        else
                        {
                            <option value="rating">Rating</option>
                        }
                        @if (ViewData["sortBy"]?.ToString() == "duration")
                        {
                            <option value="duration" selected>Duration</option>
                        }
                        else
                        {
                            <option value="duration">Duration</option>
                        }
                    </select>
                </div>
                
                <div class="col-md-2">
                    <label for="sortDirection" class="form-label">Order</label>
                    <select name="sortDirection" id="sortDirection" class="form-select">
                        @if (ViewData["sortDirection"]?.ToString() == "asc")
                        {
                            <option value="asc" selected>Ascending</option>
                        }
                        else
                        {
                            <option value="asc">Ascending</option>
                        }
                        @if (ViewData["sortDirection"]?.ToString() == "desc")
                        {
                            <option value="desc" selected>Descending</option>
                        }
                        else
                        {
                            <option value="desc">Descending</option>
                        }
                    </select>
                </div>
                
                <div class="col-md-2 d-flex align-items-end">
                    <button type="button" id="resetFilters" class="btn btn-outline-secondary w-100">
                        <i class="fas fa-undo"></i> Reset
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Results Summary and View Controls -->
    <div class="row mb-3">
        <div class="col-md-6">
            <div class="d-flex align-items-center">
                <span class="text-muted me-2">Show:</span>
                <select id="pageSizeSelect" class="form-select form-select-sm" style="width: auto;">
                    @if ((int?)ViewBag.PageSize == 12)
                    {
                        <option value="12" selected>12</option>
                    }
                    else
                    {
                        <option value="12">12</option>
                    }
                    @if ((int?)ViewBag.PageSize == 24)
                    {
                        <option value="24" selected>24</option>
                    }
                    else
                    {
                        <option value="24">24</option>
                    }
                    @if ((int?)ViewBag.PageSize == 48)
                    {
                        <option value="48" selected>48</option>
                    }
                    else
                    {
                        <option value="48">48</option>
                    }
                    @if ((int?)ViewBag.PageSize == 96)
                    {
                        <option value="96" selected>96</option>
                    }
                    else
                    {
                        <option value="96">96</option>
                    }
                </select>
                <span class="text-muted ms-2">movies</span>
            </div>
        </div>
        <div class="col-md-6 text-end">
            <div class="d-flex align-items-center justify-content-end gap-3">
                <span class="text-muted">
                    Showing @((ViewBag.PageIndex * ViewBag.PageSize) + 1) to 
                    @(Math.Min((ViewBag.PageIndex + 1) * ViewBag.PageSize, ViewBag.TotalCount)) 
                    of @ViewBag.TotalCount movies
                </span>
                <div class="btn-group btn-group-sm" role="group">
                    <input type="radio" class="btn-check" name="viewMode" id="tableView" checked>
                    <label class="btn btn-outline-secondary" for="tableView" title="Table View">
                        <i class="fas fa-table"></i>
                    </label>
                    <input type="radio" class="btn-check" name="viewMode" id="cardView">
                    <label class="btn btn-outline-secondary" for="cardView" title="Card View">
                        <i class="fas fa-th-large"></i>
                    </label>
                    <input type="radio" class="btn-check" name="viewMode" id="posterView">
                    <label class="btn btn-outline-secondary" for="posterView" title="Poster View">
                        <i class="fas fa-images"></i>
                    </label>
                </div>
            </div>
        </div>
    </div>

    <!-- Loading Spinner -->
    <div id="loadingSpinner" class="text-center py-5" style="display: none;">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <div class="mt-2">Loading movies...</div>
    </div>

    <!-- Movies Table View -->
    <div id="tableViewContainer" class="position-relative">
        <div class="card">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-dark">
                            <tr>
                                <th style="width: 50px;">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="selectAll">
                                    </div>
                                </th>
                                <th style="width: 80px;">Poster</th>
                                <th>
                                    <a href="#" class="text-white text-decoration-none sort-link" data-sort="title">
                                        Title <i class="fas fa-sort"></i>
                                    </a>
                                </th>
                                <th>
                                    <a href="#" class="text-white text-decoration-none sort-link" data-sort="releaseDate">
                                        Release Date <i class="fas fa-sort"></i>
                                    </a>
                                </th>
                                <th>Rating</th>
                                <th>
                                    <a href="#" class="text-white text-decoration-none sort-link" data-sort="duration">
                                        Duration <i class="fas fa-sort"></i>
                                    </a>
                                </th>
                                <th>
                                    <a href="#" class="text-white text-decoration-none sort-link" data-sort="price">
                                        Price <i class="fas fa-sort"></i>
                                    </a>
                                </th>
                                <th>Status</th>
                                <th>Featured</th>
                                <th>Categories</th>
                                <th style="width: 200px;">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="moviesTableBody">
                            @foreach (var movie in Model)
                            {
                                <tr id="movieRow_@movie.Id" class="movie-row">
                                    <td>
                                        <div class="form-check">
                                            <input class="form-check-input movie-checkbox" type="checkbox" value="@movie.Id">
                                        </div>
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(movie.PosterImage))
                                        {
                                            <img src="@movie.PosterImage" alt="@movie.Title" class="img-thumbnail" 
                                                 style="width: 50px; height: 75px; object-fit: cover; cursor: pointer;"
                                                 data-bs-toggle="modal" data-bs-target="#posterModal" 
                                                 data-poster="@movie.PosterImage" data-title="@movie.Title" />
                                        }
                                        else
                                        {
                                            <div class="bg-light d-flex align-items-center justify-content-center" 
                                                 style="width: 50px; height: 75px; border-radius: 0.25rem;">
                                                <i class="fas fa-image text-muted"></i>
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        <div>
                                            <div class="fw-medium">@movie.Title</div>
                                            @if (movie.IsFeatured)
                                            {
                                                <span class="badge bg-warning text-dark">
                                                    <i class="fas fa-star"></i> Featured
                                                </span>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <span class="text-muted">@movie.ReleaseDate.ToString("MMM dd, yyyy")</span>
                                    </td>
                                    <td>
                                        <span class="badge bg-info">@movie.Rating</span>
                                    </td>
                                    <td>
                                        <span class="text-muted">
                                            <i class="fas fa-clock me-1"></i>@movie.Duration min
                                        </span>
                                    </td>
                                    <td>
                                        <span class="fw-medium text-success">$@movie.Price.ToString("0.00")</span>
                                    </td>
                                    <td>
                                        @{
                                            // compute badge class once per movie (in a loop)
                                            string badgeClass = movie.Status switch
                                            {
                                                MovieStatus.Upcoming => "bg-success",
                                                MovieStatus.NowShowing => "bg-warning",
                                                MovieStatus.Ended => "bg-primary",
                                                _ => "bg-secondary"
                                            };
                                        }
                                        <span class="badge @badgeClass">@movie.Status</span>

                                    </td>
                                    <td>
                                        @if (movie.IsFeatured)
                                        {
                                            <i class="fas fa-star text-warning" title="Featured"></i>
                                        }
                                        else
                                        {
                                            <i class="far fa-star text-muted" title="Not Featured"></i>
                                        }
                                    </td>
                                    <td>
                                        <div class="d-flex flex-wrap gap-1">
                                            @foreach (var category in movie.Categories.Split(',', StringSplitOptions.RemoveEmptyEntries).Take(2))
                                            {
                                                <span class="badge bg-light text-dark">@category.Trim()</span>
                                            }
                                            @if (movie.Categories.Split(',', StringSplitOptions.RemoveEmptyEntries).Length > 2)
                                            {
                                                <span class="badge bg-secondary">+@(movie.Categories.Split(',', StringSplitOptions.RemoveEmptyEntries).Length - 2)</span>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group">
                                            <a asp-action="Details" asp-route-id="@movie.Id" 
                                               class="btn btn-outline-info" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@movie.Id" 
                                               class="btn btn-outline-warning" title="Edit">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button type="button" class="btn btn-outline-danger delete-movie" 
                                                    data-id="@movie.Id" data-title="@movie.Title" title="Delete">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                            <button type="button" class="btn btn-outline-secondary toggle-featured" 
                                                    data-id="@movie.Id" data-featured="@movie.IsFeatured.ToString().ToLower()" 
                                                    title="@(movie.IsFeatured ? "Remove from Featured" : "Add to Featured")">
                                                <i class="fas @(movie.IsFeatured ? "fa-star" : "far fa-star")"></i>
                                            </button>
                                            <div class="btn-group" role="group">
                                                <button type="button" class="btn btn-outline-secondary dropdown-toggle dropdown-toggle-split" 
                                                        data-bs-toggle="dropdown" aria-expanded="false" title="More Actions">
                                                    <i class="fas fa-ellipsis-v"></i>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li><a class="dropdown-item" href="#" onclick="duplicateMovie(@movie.Id)">
                                                        <i class="fas fa-copy me-2"></i>Duplicate
                                                    </a></li>
                                                    <li><a class="dropdown-item" asp-action="Showtimes" asp-route-movieId="@movie.Id">
                                                        <i class="fas fa-clock me-2"></i>Showtimes
                                                    </a></li>
                                                    <li><a class="dropdown-item" href="#" onclick="changeStatus(@movie.Id)">
                                                        <i class="fas fa-exchange-alt me-2"></i>Change Status
                                                    </a></li>
                                                    <li><hr class="dropdown-divider"></li>
                                                    <li><a class="dropdown-item" href="#" onclick="viewTrailer('@movie.TrailerUrl')">
                                                        <i class="fas fa-play me-2"></i>View Trailer
                                                    </a></li>
                                                </ul>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Movies Card View -->
    <div id="cardViewContainer" class="position-relative" style="display: none;">
        <div class="row" id="moviesCardContainer">
            @foreach (var movie in Model)
            {
                <div class="col-md-6 col-lg-4 col-xl-3 mb-4 movie-card" id="movieCard_@movie.Id">
                    <div class="card h-100 shadow-sm">
                        <div class="position-relative">
                            @if (!string.IsNullOrEmpty(movie.PosterImage))
                            {
                                <img src="@movie.PosterImage" alt="@movie.Title" class="card-img-top" 
                                     style="height: 300px; object-fit: cover; cursor: pointer;"
                                     data-bs-toggle="modal" data-bs-target="#posterModal" 
                                     data-poster="@movie.PosterImage" data-title="@movie.Title" />
                            }
                            else
                            {
                                <div class="card-img-top bg-light d-flex align-items-center justify-content-center" 
                                     style="height: 300px;">
                                    <i class="fas fa-image text-muted fa-3x"></i>
                                </div>
                            }
                            
                            <div class="position-absolute top-0 end-0 m-2">
                                <div class="form-check">
                                    <input class="form-check-input movie-checkbox" type="checkbox" value="@movie.Id">
                                </div>
                            </div>
                            
                            @if (movie.IsFeatured)
                            {
                                <div class="position-absolute top-0 start-0 m-2">
                                    <span class="badge bg-warning text-dark">
                                        <i class="fas fa-star"></i> Featured
                                    </span>
                                </div>
                            }
                            
                            <div class="position-absolute bottom-0 start-0 m-2">
                                @{
                                    // compute badge class once per movie (in a loop)
                                    string badgeClass = movie.Status switch
                                    {
                                        MovieStatus.Upcoming => "bg-success",
                                        MovieStatus.NowShowing => "bg-warning",
                                        MovieStatus.Ended => "bg-primary",
                                        _ => "bg-secondary"
                                    };
                                }
                                <span class="badge @badgeClass">@movie.Status</span>

                            </div>
                        </div>
                        
                        <div class="card-body">
                            <h5 class="card-title">@movie.Title</h5>
                            <div class="row text-center mb-2">
                                <div class="col-4">
                                    <div class="text-primary fw-bold">@movie.Rating</div>
                                    <small class="text-muted">Rating</small>
                                </div>
                                <div class="col-4">
                                    <div class="text-info fw-bold">@movie.Duration</div>
                                    <small class="text-muted">Minutes</small>
                                </div>
                                <div class="col-4">
                                    <div class="text-success fw-bold">$@movie.Price.ToString("0.00")</div>
                                    <small class="text-muted">Price</small>
                                </div>
                            </div>
                            <p class="card-text">
                                <small class="text-muted">
                                    <i class="fas fa-calendar me-1"></i>@movie.ReleaseDate.ToString("MMM dd, yyyy")
                                </small>
                            </p>
                            <div class="d-flex flex-wrap gap-1 mb-2">
                                @foreach (var category in movie.Categories.Split(',', StringSplitOptions.RemoveEmptyEntries).Take(3))
                                {
                                    <span class="badge bg-light text-dark">@category.Trim()</span>
                                }
                            </div>
                        </div>
                        
                        <div class="card-footer bg-transparent">
                            <div class="btn-group w-100 mb-2" role="group">
                                <a asp-action="Details" asp-route-id="@movie.Id" class="btn btn-outline-info btn-sm">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <a asp-action="Edit" asp-route-id="@movie.Id" class="btn btn-outline-warning btn-sm">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button type="button" class="btn btn-outline-danger btn-sm delete-movie" 
                                        data-id="@movie.Id" data-title="@movie.Title">
                                    <i class="fas fa-trash"></i>
                                </button>
                                <button type="button" class="btn btn-outline-secondary btn-sm toggle-featured" 
                                        data-id="@movie.Id" data-featured="@movie.IsFeatured.ToString().ToLower()">
                                    <i class="fas @(movie.IsFeatured ? "fa-star" : "far fa-star")"></i>
                                </button>
                            </div>
                            <div class="btn-group w-100" role="group">
                                <a asp-action="Showtimes" asp-route-movieId="@movie.Id" class="btn btn-outline-primary btn-sm">
                                    <i class="fas fa-clock me-1"></i>Shows
                                </a>
                                <button type="button" class="btn btn-outline-success btn-sm" onclick="viewTrailer('@movie.TrailerUrl')">
                                    <i class="fas fa-play me-1"></i>Trailer
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Movies Poster View -->
    <div id="posterViewContainer" class="position-relative" style="display: none;">
        <div class="row" id="moviesPosterContainer">
            @foreach (var movie in Model)
            {
                <div class="col-6 col-md-4 col-lg-3 col-xl-2 mb-4 movie-poster" id="moviePoster_@movie.Id">
                    <div class="position-relative">
                        @if (!string.IsNullOrEmpty(movie.PosterImage))
                        {
                            <img src="@movie.PosterImage" alt="@movie.Title" class="img-fluid rounded shadow-sm" 
                                 style="width: 100%; height: 250px; object-fit: cover; cursor: pointer;"
                                 data-bs-toggle="modal" data-bs-target="#posterModal" 
                                 data-poster="@movie.PosterImage" data-title="@movie.Title" />
                        }
                        else
                        {
                            <div class="bg-light d-flex align-items-center justify-content-center rounded shadow-sm" 
                                 style="width: 100%; height: 250px;">
                                <i class="fas fa-image text-muted fa-2x"></i>
                            </div>
                        }
                        
                        <div class="position-absolute top-0 end-0 m-1">
                            <div class="form-check">
                                <input class="form-check-input movie-checkbox" type="checkbox" value="@movie.Id">
                            </div>
                        </div>
                        
                        @if (movie.IsFeatured)
                        {
                            <div class="position-absolute top-0 start-0 m-1">
                                <span class="badge bg-warning text-dark">
                                    <i class="fas fa-star"></i>
                                </span>
                            </div>
                        }
                        
                        <div class="position-absolute bottom-0 start-0 right-0 p-2 bg-dark bg-opacity-75 text-white rounded-bottom">
                            <div class="fw-medium small">@movie.Title</div>
                            <div class="d-flex justify-content-between align-items-center">
                                <small>@movie.Rating</small>
                                <small>$@movie.Price.ToString("0.00")</small>
                            </div>
                        </div>
                        
                        <div class="position-absolute top-50 start-50 translate-middle movie-overlay" style="display: none;">
                            <div class="btn-group" role="group">
                                <a asp-action="Details" asp-route-id="@movie.Id" class="btn btn-info btn-sm">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <a asp-action="Edit" asp-route-id="@movie.Id" class="btn btn-warning btn-sm">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button type="button" class="btn btn-danger btn-sm delete-movie" 
                                        data-id="@movie.Id" data-title="@movie.Title">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Enhanced Pagination -->
    <div id="pagination" class="d-flex justify-content-between align-items-center mt-4">
        <div class="pagination-info text-muted">
            <!-- Auto-populated by JavaScript -->
        </div>
        <nav aria-label="Movies pagination">
            <ul class="pagination pagination-sm mb-0">
                @{
                    int totalPages = (int)Math.Ceiling((double)ViewBag.TotalCount / ViewBag.PageSize);
                    int currentPage = ViewBag.PageIndex;
                    int startPage = Math.Max(0, currentPage - 2);
                    int endPage = Math.Min(totalPages - 1, currentPage + 2);
                }
                
                @if (currentPage > 0)
                {
                    <li class="page-item">
                        <a class="page-link page-link-nav" href="#" data-page="0" aria-label="First">
                            <i class="fas fa-angle-double-left"></i>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link page-link-nav" href="#" data-page="@(currentPage - 1)" aria-label="Previous">
                            <i class="fas fa-angle-left"></i>
                        </a>
                    </li>
                }
                
                @if (startPage > 0)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
                
                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link page-link-num" href="#" data-page="@i">@(i + 1)</a>
                    </li>
                }
                
                @if (endPage < totalPages - 1)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
                
                @if (currentPage < totalPages - 1)
                {
                    <li class="page-item">
                        <a class="page-link page-link-nav" href="#" data-page="@(currentPage + 1)" aria-label="Next">
                            <i class="fas fa-angle-right"></i>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link page-link-nav" href="#" data-page="@(totalPages - 1)" aria-label="Last">
                            <i class="fas fa-angle-double-right"></i>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>

<!-- Statistics Modal -->
<div class="modal fade" id="statisticsModal" tabindex="-1" aria-labelledby="statisticsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="statisticsModalLabel">Movie Analytics Dashboard</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row mb-4">
                    <div class="col-md-3">
                        <div class="card bg-primary text-white">
                            <div class="card-body text-center">
                                <h3 id="totalMovies">@ViewBag.TotalCount</h3>
                                <div>Total Movies</div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card bg-success text-white">
                            <div class="card-body text-center">
                                <h3 id="activeMovies">@Model.Count(m => m.Status == MovieStatus.NowShowing)</h3>
                                <div>Active Movies</div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card bg-warning text-white">
                            <div class="card-body text-center">
                                <h3 id="featuredMovies">@Model.Count(m => m.IsFeatured)</h3>
                                <div>Featured Movies</div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card bg-info text-white">
                            <div class="card-body text-center">
                                <h3 id="avgPrice">$@Model.Average(m => m.Price).ToString("0.00")</h3>
                                <div>Avg Price</div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <h6>Movies by Status</h6>
                        <div id="statusChart" style="height: 300px;"></div>
                    </div>
                    <div class="col-md-6">
                        <h6>Movies by Rating</h6>
                        <div id="ratingChart" style="height: 300px;"></div>
                    </div>
                </div>
                
                <div class="row mt-4">
                    <div class="col-md-6">
                        <h6>Release Years Distribution</h6>
                        <div id="yearsChart" style="height: 300px;"></div>
                    </div>
                    <div class="col-md-6">
                        <h6>Price Range Distribution</h6>
                        <div id="priceChart" style="height: 300px;"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bulk Actions Modal -->
<div class="modal fade" id="bulkActionsModal" tabindex="-1" aria-labelledby="bulkActionsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bulkActionsModalLabel">Bulk Actions</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <div class="alert alert-info">
                        <span id="selectedCount">0</span> movies selected
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label">Choose Action</label>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="bulkAction" id="bulkActivate" value="activate">
                        <label class="form-check-label" for="bulkActivate">Set as Active</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="bulkAction" id="bulkDeactivate" value="deactivate">
                        <label class="form-check-label" for="bulkDeactivate">Set as Inactive</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="bulkAction" id="bulkFeature" value="feature">
                        <label class="form-check-label" for="bulkFeature">Add to Featured</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="bulkAction" id="bulkUnfeature" value="unfeature">
                        <label class="form-check-label" for="bulkUnfeature">Remove from Featured</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="bulkAction" id="bulkDelete" value="delete">
                        <label class="form-check-label" for="bulkDelete">Delete Selected</label>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="executeBulkAction">Execute Action</button>
            </div>
        </div>
    </div>
</div>

<!-- Export Modal -->
<div class="modal fade" id="exportModal" tabindex="-1" aria-labelledby="exportModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exportModalLabel">Export Movies</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">Export Format</label>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="exportFormat" id="exportExcel" value="excel" checked>
                        <label class="form-check-label" for="exportExcel">Excel (.xlsx)</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="exportFormat" id="exportCsv" value="csv">
                        <label class="form-check-label" for="exportCsv">CSV (.csv)</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="exportFormat" id="exportPdf" value="pdf">
                        <label class="form-check-label" for="exportPdf">PDF (.pdf)</label>
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label">Export Options</label>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="exportFiltered" checked>
                        <label class="form-check-label" for="exportFiltered">Export only filtered results</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="includePosters">
                        <label class="form-check-label" for="includePosters">Include poster URLs</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="includeCategories">
                        <label class="form-check-label" for="includeCategories">Include categories</label>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="exportBtn">
                    <i class="fas fa-download"></i> Export
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Poster Modal -->
<div class="modal fade" id="posterModal" tabindex="-1" aria-labelledby="posterModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="posterModalLabel">Movie Poster</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img id="posterModalImage" src="" alt="" class="img-fluid" />
            </div>
        </div>
    </div>
</div>

<!-- Trailer Modal -->
<div class="modal fade" id="trailerModal" tabindex="-1" aria-labelledby="trailerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="trailerModalLabel">Movie Trailer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0">
                <div class="ratio ratio-16x9">
                    <iframe id="trailerFrame" src="" frameborder="0" allowfullscreen></iframe>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Toast Notifications -->
<div class="toast-container position-fixed top-0 end-0 p-3">
    <div id="successToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header bg-success text-white">
            <i class="fas fa-check-circle me-2"></i>
            <strong class="me-auto">Success</strong>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body"></div>
    </div>
    <div id="errorToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header bg-danger text-white">
            <i class="fas fa-exclamation-triangle me-2"></i>
            <strong class="me-auto">Error</strong>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body"></div>
    </div>
</div>

@section Styles {
    <style>
        .table-hover tbody tr:hover {
            background-color: rgba(0, 123, 255, 0.05);
        }
        
        .movie-card .card {
            transition: transform 0.2s, box-shadow 0.2s;
        }
        
        .movie-card .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        
        .movie-poster {
            transition: transform 0.2s;
        }
        
        .movie-poster:hover {
            transform: scale(1.05);
        }
        
        .movie-poster:hover .movie-overlay {
            display: block !important;
        }
        
        .sort-link:hover {
            text-decoration: underline !important;
        }
        
        .fade-in {
            animation: fadeIn 0.3s ease-in;
        }
        
        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .search-highlight {
            background-color: yellow;
            font-weight: bold;
        }
        
        .btn-group .dropdown-toggle-split {
            padding-left: 0.375rem;
            padding-right: 0.375rem;
        }
        
        .img-thumbnail {
            transition: transform 0.2s;
        }
        
        .img-thumbnail:hover {
            transform: scale(1.1);
        }
    </style>
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function() {
            let searchTimeout;
            let sortDirection = 'asc';
            
            // Show toast notifications
            function showToast(type, message) {
                const toast = $(`#${type}Toast`);
                toast.find('.toast-body').text(message);
                const bsToast = new bootstrap.Toast(toast[0]);
                bsToast.show();
            }
            
            // Show/hide loading spinner
            function toggleLoading(show) {
                if (show) {
                    $('#loadingSpinner').show();
                    $('#tableViewContainer, #cardViewContainer, #posterViewContainer').css('opacity', '0.5');
                } else {
                    $('#loadingSpinner').hide();
                    $('#tableViewContainer, #cardViewContainer, #posterViewContainer').css('opacity', '1').addClass('fade-in');
                }
            }
            
            // Update pagination info
            function updatePaginationInfo() {
                const pageIndex = @ViewBag.PageIndex;
                const pageSize = @ViewBag.PageSize;
                const totalCount = @ViewBag.TotalCount;
                const start = (pageIndex * pageSize) + 1;
                const end = Math.min((pageIndex + 1) * pageSize, totalCount);
                $('.pagination-info').text(`Showing ${start} to ${end} of ${totalCount} movies`);
            }
            
            // Load data with AJAX
            function loadData(params = {}) {
                toggleLoading(true);
                
                const defaultParams = {
                    pageIndex: 0,
                    pageSize: $('#pageSizeSelect').val() || @ViewBag.PageSize,
                    search: $('#searchInput').val(),
                    status: $('#statusFilter').val(),
                    category: $('#categoryFilter').val(),
                    rating: $('#ratingFilter').val(),
                    featured: $('#featuredFilter').val(),
                    year: $('#yearFilter').val(),
                    duration: $('#durationFilter').val(),
                    priceRange: $('#priceRangeFilter').val(),
                    sortBy: $('#sortBy').val(),
                    sortDirection: $('#sortDirection').val()
                };
                
                const finalParams = { ...defaultParams, ...params };
                
                $.ajax({
                    url: '@Url.Action("Index")',
                    type: 'GET',
                    data: finalParams,
                    success: function(data) {
                        const $data = $(data);
                        $('#moviesTableBody').html($data.find('#moviesTableBody').html());
                        $('#moviesCardContainer').html($data.find('#moviesCardContainer').html());
                        $('#moviesPosterContainer').html($data.find('#moviesPosterContainer').html());
                        $('#pagination').html($data.find('#pagination').html());
                        updatePaginationInfo();
                        updateSelectedCount();
                        showToast('success', 'Data loaded successfully');
                    },
                    error: function(xhr) {
                        showToast('error', 'Failed to load data: ' + xhr.responseText);
                    },
                    complete: function() {
                        toggleLoading(false);
                    }
                });
            }
            
            // View mode toggle
            $('input[name="viewMode"]').change(function() {
                const viewMode = $(this).attr('id');
                
                // Hide all containers
                $('#tableViewContainer, #cardViewContainer, #posterViewContainer').hide();
                
                // Show selected container
                if (viewMode === 'cardView') {
                    $('#cardViewContainer').show();
                } else if (viewMode === 'posterView') {
                    $('#posterViewContainer').show();
                } else {
                    $('#tableViewContainer').show();
                }
            });
            
            // Select all checkbox
            $('#selectAll').change(function() {
                $('.movie-checkbox').prop('checked', $(this).prop('checked'));
                updateSelectedCount();
            });
            
            // Individual checkboxes
            $(document).on('change', '.movie-checkbox', function() {
                updateSelectedCount();
                const totalChecked = $('.movie-checkbox:checked').length;
                const totalCheckboxes = $('.movie-checkbox').length;
                $('#selectAll').prop('indeterminate', totalChecked > 0 && totalChecked < totalCheckboxes);
                $('#selectAll').prop('checked', totalChecked === totalCheckboxes);
            });
            
            // Update selected count
            function updateSelectedCount() {
                const count = $('.movie-checkbox:checked').length;
                $('#selectedCount').text(count);
            }
            
            // Delete movie with confirmation
            $(document).on('click', '.delete-movie', function() {
                const movieId = $(this).data('id');
                const movieTitle = $(this).data('title');
                
                if (!confirm(`Are you sure you want to delete "${movieTitle}"?`)) return;
                
                const $btn = $(this);
                const originalHtml = $btn.html();
                $btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i>');
                
                $.ajax({
                    url: '@Url.Action("Delete")',
                    type: 'POST',
                    data: { id: movieId },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        showToast('success', `Movie "${movieTitle}" deleted successfully`);
                        $(`#movieRow_${movieId}, #movieCard_${movieId}, #moviePoster_${movieId}`).fadeOut(300, function() {
                            $(this).remove();
                        });
                        setTimeout(() => {
                            loadData({ pageIndex: @ViewBag.PageIndex });
                        }, 300);
                    },
                    error: function(xhr) {
                        showToast('error', 'Failed to delete movie: ' + xhr.responseText);
                        $btn.prop('disabled', false).html(originalHtml);
                    }
                });
            });
            
            // Toggle featured status
            $(document).on('click', '.toggle-featured', function() {
                const movieId = $(this).data('id');
                const isFeatured = $(this).data('featured') === 'true';
                const action = isFeatured ? 'unfeature' : 'feature';
                
                const $btn = $(this);
                const originalHtml = $btn.html();
                $btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i>');
                
                $.ajax({
                    url: '@Url.Action("ToggleFeatured")',
                    type: 'POST',
                    data: { id: movieId },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        showToast('success', `Movie ${action}d successfully`);
                        loadData({ pageIndex: @ViewBag.PageIndex });
                    },
                    error: function(xhr) {
                        showToast('error', `Failed to ${action} movie: ` + xhr.responseText);
                        $btn.prop('disabled', false).html(originalHtml);
                    }
                });
            });
            
            // Poster modal
            $(document).on('click', '[data-bs-target="#posterModal"]', function() {
                const poster = $(this).data('poster');
                const title = $(this).data('title');
                $('#posterModalImage').attr('src', poster).attr('alt', title);
                $('#posterModalLabel').text(title);
            });
            
            // Real-time search with debouncing
            $('#searchInput').on('input', function() {
                clearTimeout(searchTimeout);
                const searchTerm = $(this).val();
                
                searchTimeout = setTimeout(() => {
                    loadData({ pageIndex: 0, search: searchTerm });
                }, 500);
            });
            
            // Clear search
            $('#clearSearch').click(function() {
                $('#searchInput').val('');
                loadData({ pageIndex: 0, search: '' });
            });
            
            // Reset filters
            $('#resetFilters').click(function() {
                $('#searchForm')[0].reset();
                loadData({ pageIndex: 0 });
            });
            
            // Form submission
            $("#searchForm").submit(function(e) {
                e.preventDefault();
                loadData({ pageIndex: 0 });
            });
            
            // Page size change
            $('#pageSizeSelect').change(function() {
                loadData({ pageIndex: 0, pageSize: $(this).val() });
            });
            
            // Filter changes
            $('#statusFilter, #categoryFilter, #ratingFilter, #featuredFilter, #yearFilter, #durationFilter, #priceRangeFilter, #sortBy, #sortDirection').change(function() {
                loadData({ pageIndex: 0 });
            });
            
            // Pagination
            $(document).on("click", ".page-link-num, .page-link-nav", function(e) {
                e.preventDefault();
                const pageIndex = $(this).data("page");
                loadData({ pageIndex: pageIndex });
            });
            
            // Refresh button
            $('#refreshBtn').click(function() {
                loadData({ pageIndex: @ViewBag.PageIndex });
            });
            
            // Bulk actions
            $('#executeBulkAction').click(function() {
                const selectedIds = $('.movie-checkbox:checked').map(function() {
                    return $(this).val();
                }).get();
                
                if (selectedIds.length === 0) {
                    showToast('error', 'Please select at least one movie');
                    return;
                }
                
                const action = $('input[name="bulkAction"]:checked').val();
                if (!action) {
                    showToast('error', 'Please select an action');
                    return;
                }
                
                if (action === 'delete' && !confirm(`Are you sure you want to delete ${selectedIds.length} movies?`)) {
                    return;
                }
                
                const $btn = $(this);
                const originalText = $btn.text();
                $btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Processing...');
                
                $.ajax({
                    url: '@Url.Action("BulkAction")',
                    type: 'POST',
                    data: { 
                        action: action, 
                        movieIds: selectedIds 
                    },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        showToast('success', `Bulk ${action} completed successfully`);
                        $('#bulkActionsModal').modal('hide');
                        loadData({ pageIndex: @ViewBag.PageIndex });
                        $('.movie-checkbox').prop('checked', false);
                        $('#selectAll').prop('checked', false);
                        updateSelectedCount();
                    },
                    error: function(xhr) {
                        showToast('error', 'Bulk action failed: ' + xhr.responseText);
                    },
                    complete: function() {
                        $btn.prop('disabled', false).text(originalText);
                    }
                });
            });
            
            // Export functionality
            $('#exportBtn').click(function() {
                const format = $('input[name="exportFormat"]:checked').val();
                const filtered = $('#exportFiltered').is(':checked');
                const includePosters = $('#includePosters').is(':checked');
                const includeCategories = $('#includeCategories').is(':checked');
                
                let params = { 
                    format: format,
                    includePosters: includePosters,
                    includeCategories: includeCategories
                };
                
                if (filtered) {
                    params = {
                        ...params,
                        search: $('#searchInput').val(),
                        status: $('#statusFilter').val(),
                        category: $('#categoryFilter').val(),
                        rating: $('#ratingFilter').val(),
                        featured: $('#featuredFilter').val(),
                        year: $('#yearFilter').val(),
                        duration: $('#durationFilter').val(),
                        priceRange: $('#priceRangeFilter').val(),
                        sortBy: $('#sortBy').val(),
                        sortDirection: $('#sortDirection').val()
                    };
                }
                
                // Create a form and submit it to trigger download
                const form = $('<form>', {
                    method: 'POST',
                    action: '@Url.Action("Export")'
                });
                
                $.each(params, function(key, value) {
                    if (value !== undefined && value !== '') {
                        form.append($('<input>', {
                            type: 'hidden',
                            name: key,
                            value: value
                        }));
                    }
                });
                
                // Add anti-forgery token
                form.append($('input[name="__RequestVerificationToken"]').clone());
                
                $('body').append(form);
                form.submit();
                form.remove();
                
                $('#exportModal').modal('hide');
                showToast('success', 'Export started. Download will begin shortly.');
            });
            
            // Initialize statistics charts
            $('#statisticsModal').on('shown.bs.modal', function() {
                loadStatisticsCharts();
            });

           function loadStatisticsCharts() {
                // Status Chart
                const statusData = @Html.Raw(Json.Serialize(Model.GroupBy(m => m.Status).Select(g => new { Status = g.Key, Count = g.Count() }).ToArray()));
                createDoughnutChart('statusChart', 'Movies by Status', statusData.map(d => d.Status), statusData.map(d => d.Count));

                // Rating Chart
                const ratingData = @Html.Raw(Json.Serialize(Model.GroupBy(m => m.Rating).Select(g => new { Rating = g.Key, Count = g.Count() }).ToArray()));
                createDoughnutChart('ratingChart', 'Movies by Rating', ratingData.map(d => d.Rating), ratingData.map(d => d.Count));

                // Years Chart
                const yearsData = @Html.Raw(Json.Serialize(Model.GroupBy(m => m.ReleaseDate.Year).Select(g => new { Year = g.Key, Count = g.Count() }).OrderBy(x => x.Year).ToArray()));
                createBarChart('yearsChart', 'Movies by Release Year', yearsData.map(d => d.Year.ToString()), yearsData.map(d => d.Count));

                // Price Range Chart
                const priceRanges = [
                    { range: '$0-10', count: @Model.Count(m => m.Price <= 10) },
                    { range: '$10-20', count: @Model.Count(m => m.Price > 10 && m.Price <= 20) },
                    { range: '$20+', count: @Model.Count(m => m.Price > 20) }
                ];
                createBarChart('priceChart', 'Movies by Price Range', priceRanges.map(d => d.range), priceRanges.map(d => d.count));
            }

            function createDoughnutChart(canvasId, title, labels, data) {
                const ctx = document.getElementById(canvasId);
                if (ctx) {
                    new Chart(ctx, {
                        type: 'doughnut',
                        data: {
                            labels: labels,
                            datasets: [{
                                data: data,
                                backgroundColor: [
                                    '#FF6384',
                                    '#36A2EB',
                                    '#FFCE56',
                                    '#4BC0C0',
                                    '#9966FF',
                                    '#FF9F40'
                                ],
                                borderWidth: 2,
                                borderColor: '#fff'
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    position: 'bottom'
                                },
                                title: {
                                    display: true,
                                    text: title
                                }
                            }
                        }
                    });
                }
            }

            function createBarChart(canvasId, title, labels, data) {
                const ctx = document.getElementById(canvasId);
                if (ctx) {
                    new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Count',
                                data: data,
                                backgroundColor: '#36A2EB',
                                borderColor: '#36A2EB',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                },
                                title: {
                                    display: true,
                                    text: title
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        stepSize: 1
                                    }
                                }
                            }
                        }
                    });
                }
            }

            // Sorting functionality
            $(document).on('click', '.sort-link', function(e) {
                e.preventDefault();
                const sortBy = $(this).data('sort');
                const currentSortBy = $('#sortBy').val();
                const currentDirection = $('#sortDirection').val();

                let newDirection = 'asc';
                if (sortBy === currentSortBy && currentDirection === 'asc') {
                    newDirection = 'desc';
                }

                $('#sortBy').val(sortBy);
                $('#sortDirection').val(newDirection);

                // Update sort icons
                $('.sort-link i').removeClass('fa-sort-up fa-sort-down').addClass('fa-sort');
                if (newDirection === 'asc') {
                    $(this).find('i').removeClass('fa-sort fa-sort-down').addClass('fa-sort-up');
                } else {
                    $(this).find('i').removeClass('fa-sort fa-sort-up').addClass('fa-sort-down');
                }

                loadData({ pageIndex: 0, sortBy: sortBy, sortDirection: newDirection });
            });

            // Global functions for action buttons
            window.duplicateMovie = function(movieId) {
                if (!confirm('Are you sure you want to duplicate this movie?')) return;

                $.ajax({
                    url: '@Url.Action("Duplicate")',
                    type: 'POST',
                    data: { id: movieId },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        showToast('success', 'Movie duplicated successfully');
                        loadData({ pageIndex: @ViewBag.PageIndex });
                    },
                    error: function(xhr) {
                        showToast('error', 'Failed to duplicate movie: ' + xhr.responseText);
                    }
                });
            };

            window.changeStatus = function(movieId) {
                const statuses = ['Active', 'Inactive', 'Coming Soon', 'Now Showing'];
                const currentStatus = $(`#movieRow_${movieId} .badge`).text().trim();

                let html = '<select class="form-select" id="newStatus">';
                statuses.forEach(status => {
                    const selected = status === currentStatus ? 'selected' : '';
                    html += `<option value="${status}" ${selected}>${status}</option>`;
                });
                html += '</select>';

                if (confirm('Change movie status?')) {
                    // You could implement a more sophisticated modal here
                    const newStatus = prompt('Enter new status (Active, Inactive, Coming Soon, Now Showing):', currentStatus);

                    if (newStatus && statuses.includes(newStatus)) {
                        $.ajax({
                            url: '@Url.Action("ChangeStatus")',
                            type: 'POST',
                            data: { id: movieId, status: newStatus },
                            headers: {
                                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                            },
                            success: function(response) {
                                showToast('success', 'Movie status updated successfully');
                                loadData({ pageIndex: @ViewBag.PageIndex });
                            },
                            error: function(xhr) {
                                showToast('error', 'Failed to update movie status: ' + xhr.responseText);
                            }
                        });
                    }
                }
            };

            window.viewTrailer = function(trailerUrl) {
                if (!trailerUrl || trailerUrl === '') {
                    showToast('error', 'No trailer available for this movie');
                    return;
                }

                // Convert YouTube URL to embed format if necessary
                let embedUrl = trailerUrl;
                if (trailerUrl.includes('youtube.com/watch?v=')) {
                    const videoId = trailerUrl.split('v=')[1].split('&')[0];
                    embedUrl = `https://www.youtube.com/embed/${videoId}`;
                } else if (trailerUrl.includes('youtu.be/')) {
                    const videoId = trailerUrl.split('youtu.be/')[1].split('?')[0];
                    embedUrl = `https://www.youtube.com/embed/${videoId}`;
                }

                $('#trailerFrame').attr('src', embedUrl);
                $('#trailerModal').modal('show');
            };

            // Clean up trailer when modal is closed
            $('#trailerModal').on('hidden.bs.modal', function() {
                $('#trailerFrame').attr('src', '');
            });

            // Initialize search highlighting
            function highlightSearchTerms() {
                const searchTerm = $('#searchInput').val().toLowerCase();
                if (searchTerm.length > 0) {
                    $('.movie-row, .movie-card, .movie-poster').each(function() {
                        const $this = $(this);
                        const text = $this.text();
                        if (text.toLowerCase().includes(searchTerm)) {
                            // Simple highlighting - you might want to use a more sophisticated library
                            const regex = new RegExp(`(${searchTerm})`, 'gi');
                            const highlightedText = text.replace(regex, '<span class="search-highlight">$1</span>');
                            // Note: This is a simplified example - in practice, you'd want to be more careful about HTML escaping
                        }
                    });
                }
            }

            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Initialize
            updatePaginationInfo();
            updateSelectedCount();
        });
    </script>
}