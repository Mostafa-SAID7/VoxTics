@model VoxTics.Areas.Admin.ViewModels.MovieVMs.MovieIndexVM
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "Admin - Manage Movies";
}

<div class="container py-3">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <a asp-action="Create" asp-controller="Movies" asp-area="Admin" class="btn btn-primary">Create Movie</a>
    </div>

    <form id="filterForm" method="get" class="mb-3">
        <div class="row g-2">
            <div class="col-md-3">
                <input asp-for="Filter.Search" class="form-control" placeholder="Search title or description" />
            </div>
            <div class="col-md-2">
                <select asp-for="Filter.CategoryId" asp-items="Model.Categories" class="form-select">
                    <option value="">All Categories</option>
                </select>
            </div>
            <div class="col-md-2">
                <select asp-for="Filter.CinemaId" asp-items="Model.Cinemas" class="form-select">
                    <option value="">All Cinemas</option>
                </select>
            </div>
            <div class="col-md-2">
                <select asp-for="Filter.SortBy" class="form-select">
                    <option value="Title">Sort by Title</option>
                    <option value="Price">Sort by Price</option>
                    <option value="StartDate">Sort by Start Date</option>
                    <option value="EndDate">Sort by End Date</option>
                </select>
            </div>
            <div class="col-md-1">
                <input asp-for="Filter.PageSize" class="form-control" />
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-secondary">Apply</button>
                <a asp-action="Index" asp-controller="Movies" asp-area="Admin" class="btn btn-link">Reset</a>
            </div>
        </div>
    </form>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Poster</th>
                <th>Title</th>
                <th>Category</th>
                <th>Cinema</th>
                <th>Price</th>
                <th>Dates</th>
                <th>Status</th>
                <th style="width:170px">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var m in Model.Movies)
            {
                <tr>
                    <td style="width:80px">
                        @if (!string.IsNullOrEmpty(m.ImgUrl))
                        {
                            <img src="@m.ImgUrl" style="height:60px;object-fit:cover" />
                        }
                    </td>
                    <td>@m.Title</td>
                    <td>@m.CategoryName</td>
                    <td>@m.CinemaName</td>
                    <td>@m.Price.ToString("0.00")</td>
                    <td>@m.StartDate.ToShortDateString() - @m.EndDate.ToShortDateString()</td>
                    <td>@m.MovieStatus</td>
                    <td>
                        <button class="btn btn-sm btn-info btn-details" data-id="@m.Id">Details</button>
                        <button class="btn btn-sm btn-warning btn-edit" data-id="@m.Id">Edit</button>
                        <button class="btn btn-sm btn-danger btn-delete" data-id="@m.Id">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav aria-label="Page navigation">
        <ul class="pagination">
            @{
                var current = Model.CurrentPage;
                var total = Model.TotalPages <= 0 ? 1 : Model.TotalPages;
            }
            <li class="page-item @(current <= 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", "Movies", new { area = "Admin", Page = current - 1, PageSize = Model.PageSize, Search = Model.Filter.Search, CategoryId = Model.Filter.CategoryId, CinemaId = Model.Filter.CinemaId, SortBy = Model.Filter.SortBy })">Previous</a>
            </li>
            @for (int i = 1; i <= total; i++)
            {
                <li class="page-item @(i == current ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", "Movies", new { area = "Admin", Page = i, PageSize = Model.PageSize, Search = Model.Filter.Search, CategoryId = Model.Filter.CategoryId, CinemaId = Model.Filter.CinemaId, SortBy = Model.Filter.SortBy })">@i</a>
                </li>
            }
            <li class="page-item @(current >= total ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", "Movies", new { area = "Admin", Page = current + 1, PageSize = Model.PageSize, Search = Model.Filter.Search, CategoryId = Model.Filter.CategoryId, CinemaId = Model.Filter.CinemaId, SortBy = Model.Filter.SortBy })">Next</a>
            </li>
        </ul>
    </nav>
</div>

<!-- AJAX Modal -->
<div class="modal fade" id="ajaxModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ajaxModalTitle">...</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="ajaxModalBody"></div>
        </div>
    </div>
</div>

@section Scripts {
    <text>
        <script>
            (function(){
                var createUrl = '@Url.Action("Create", "Movies", new { area = "Admin" })';
                var editUrl = '@Url.Action("Edit", "Movies", new { area = "Admin" })';
                var deleteUrl = '@Url.Action("Delete", "Movies", new { area = "Admin" })';
                var detailsUrl = '@Url.Action("Details", "Movies", new { area = "Admin" })';
                var removeImageUrl = '@Url.Action("RemoveImage", "Movies", new { area = "Admin" })';

                function showModal(title, html) {
                    $('#ajaxModalTitle').text(title);
                    $('#ajaxModalBody').html(html);
                    var modal = new bootstrap.Modal(document.getElementById('ajaxModal'));
                    modal.show();
                }

                $('#btnCreate').on('click', function(){
                    $.get(createUrl).done(function(html){ showModal('Create Movie', html); });
                });

                $(document).on('click', '.btn-edit', function(){
                    var id = $(this).data('id');
                    $.get(editUrl, { id: id }).done(function(html){ showModal('Edit Movie', html); });
                });

                $(document).on('click', '.btn-details', function(){
                    var id = $(this).data('id');
                    $.get(detailsUrl, { id: id }).done(function(html){ showModal('Movie Details', html); });
                });

                $(document).on('click', '.btn-delete', function(){
                    var id = $(this).data('id');
                    $.get(deleteUrl, { id: id }).done(function(html){ showModal('Delete Movie', html); });
                });

                // submit create/edit forms by AJAX (multipart support)
                $(document).on('submit', 'form.ajax-entity-form', function(e){
                    e.preventDefault();
                    var form = $(this);
                    var fd = new FormData(this);
                    $.ajax({
                        url: form.attr('action'),
                        method: form.attr('method'),
                        data: fd,
                        processData: false,
                        contentType: false,
                        success: function(res){
                            if (res && res.success) {
                                var modalEl = document.getElementById('ajaxModal');
                                var modal = bootstrap.Modal.getInstance(modalEl);
                                if (modal) modal.hide();
                                location.reload();
                            } else {
                                // server returned HTML partial (validation errors)
                                $('#ajaxModalBody').html(res);
                            }
                        },
                        error: function(xhr){
                            alert('Error: ' + xhr.statusText);
                        }
                    });
                });

                // delegated delete form
                $(document).on('submit', 'form.ajax-delete-form', function(e){
                    e.preventDefault();
                    var f = $(this);
                    $.ajax({
                        url: f.attr('action'),
                        method: f.attr('method'),
                        data: f.serialize(),
                        success: function(res){
                            if (res && res.success) {
                                var modalEl = document.getElementById('ajaxModal');
                                var modal = bootstrap.Modal.getInstance(modalEl);
                                if (modal) modal.hide();
                                location.reload();
                            }
                        }
                    });
                });

                // remove single image button
                $(document).on('click', '.btn-remove-img', function(e){
                    e.preventDefault();
                    if (!confirm('Remove this image?')) return;
                    var id = $(this).data('id');
                    var $btn = $(this);
                    $.post(removeImageUrl, { id: id }).done(function(res){
                        if (res.success) $btn.closest('.existing-image').remove();
                    });
                });

            })();
        </script>
    </text>
}
