@using VoxTics.Areas.Admin.ViewModels.Movie
@model List<MovieViewModel>
@{
    ViewData["Title"] = "Movies";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastr@2.1.4/build/toastr.min.css" />

<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0">Movies</h2>
        <button id="btnCreate" class="btn btn-primary js-open" data-url="@Url.Action("Create")" data-title="Create Movie">+ New Movie</button>
    </div>

    <div class="card shadow-sm">
        <div class="card-body p-0">
            <table class="table table-hover mb-0">
                <thead class="table-light">
                    <tr>
                        <th>Poster</th>
                        <th>Title</th>
                        <th>Release</th>
                        <th>Duration</th>
                        <th>Price</th>
                        <th>Status</th>
                        <th class="text-end">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var m in Model)
                    {
                        <tr>
                            <td style="width:80px;">
                                @if (!string.IsNullOrWhiteSpace(m.CurrentPosterImage))
                                {
                                    <img src="@m.CurrentPosterImage" alt="@m.Title" class="img-fluid rounded" style="max-height:60px;" />
                                }
                                else
                                {
                                    <div class="bg-light d-flex align-items-center justify-content-center" style="height:60px;width:60px;border-radius:4px;">
                                        <small class="text-muted">No image</small>
                                    </div>
                                }
                            </td>
                            <td>@m.Title</td>
                            <td>@m.ReleaseDate.ToString("yyyy-MM-dd")</td>
                            <td>@m.DurationInMinutes min</td>
                            <td>@m.BasePrice.ToString("C")</td>
                            <td>@m.Status.ToString()</td>
                            <td class="text-end">
                                <button class="btn btn-sm btn-outline-primary js-open" data-url="@Url.Action("Details", new { id = m.Id })" data-title="Details: @m.Title">View</button>
                                <button class="btn btn-sm btn-outline-secondary js-open" data-url="@Url.Action("Edit", new { id = m.Id })" data-title="Edit: @m.Title">Edit</button>
                                <button class="btn btn-sm btn-outline-danger js-open" data-url="@Url.Action("Delete", new { id = m.Id })" data-title="Delete: @m.Title">Delete</button>
                            </td>
                        </tr>
                    }
                    @if (!Model.Any())
                    {
                        <tr>
                            <td colspan="7" class="text-center text-muted py-4">No movies found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="mainModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">...</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalBody"></div>
        </div>
    </div>
</div>

@Html.AntiForgeryToken()

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/toastr@2.1.4/build/toastr.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    (function($){
        function openModal(url, title) {
            $('#mainModal .modal-title').text(title || '');
            $('#modalBody').html('<div class="text-center p-4"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></div>');
            var modal = new bootstrap.Modal(document.getElementById('mainModal'));
            modal.show();

            $.get(url)
                .done(function(html) {
                    $('#modalBody').html(html);
                    $.validator.unobtrusive.parse($('#modalBody'));
                })
                .fail(function() {
                    $('#modalBody').html('<div class="alert alert-danger">Unable to load content.</div>');
                });
        }

        $(document).on('click', '.js-open', function(e){
            e.preventDefault();
            var url = $(this).data('url');
            var title = $(this).data('title') || '';
            openModal(url, title);
        });

        // AJAX submit (supports file uploads)
        $(document).on('submit', '#modalBody form', function(e){
            e.preventDefault();
            var form = this;
            var $form = $(form);
            var action = $form.attr('action') || window.location.href;
            var method = ($form.attr('method') || 'post').toUpperCase();
            var formData = new FormData(form);

            var token = $('input[name="__RequestVerificationToken"]').first().val();
            if (token && !formData.has('__RequestVerificationToken')) formData.append('__RequestVerificationToken', token);

            $.ajax({
                url: action,
                type: method,
                data: formData,
                processData: false,
                contentType: false,
                success: function(res) {
                    if (typeof res === 'object' && res !== null && res.success) {
                        toastr.success(res.message || 'Saved');
                        var bsModal = bootstrap.Modal.getInstance(document.getElementById('mainModal'));
                        bsModal.hide();
                        setTimeout(function(){ location.reload(); }, 300);
                    } else {
                        // HTML returned (form with validation errors)
                        $('#modalBody').html(res);
                        $.validator.unobtrusive.parse($('#modalBody'));
                    }
                },
                error: function() {
                    toastr.error('Server error. Try again.');
                }
            });
        });

        // Delete confirm inside modal (button with class js-confirm-delete)
        $(document).on('click', '#modalBody .js-confirm-delete', function(e){
            e.preventDefault();
            var $btn = $(this);
            var $form = $btn.closest('form');

            Swal.fire({
                title: 'Are you sure?',
                text: 'This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete',
            }).then((result) => {
                if (result.isConfirmed) {
                    // trigger form submit which will be handled by the AJAX submit handler
                    $form.trigger('submit');
                }
            });
        });

        // show TempData messages on page load (if any)
        $(function(){
            var success = '@(TempData["Success"] ?? "")'.trim();
            var error = '@(TempData["Error"] ?? "")'.trim();
            if (success) toastr.success(success);
            if (error) toastr.error(error);
        });
    })(jQuery);
</script>
